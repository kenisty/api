openapi: 3.0.0
info:
  title: 'Kenisty API'
  description: 'The main entry point for Kenisty project.'
  contact:
    name: 'Kenisty IT Team'
    url: 'https://kenisty.com'
  license:
    name: MIT
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8000/'
    description: 'Development Server'
  -
    url: 'https://kenisty.com/'
    description: 'Production Server'
paths:
  /v1/auth/register:
    post:
      tags:
        - Authentication
      summary: 'A request to register a new user.'
      description: 'Request for registering new users in. Returns a status code of 201 if the user was able to successfully register attached with an authentication token.'
      operationId: 557dcb2ee3dfdae1e150def5ea1f831c
      requestBody:
        content:
          application/json:
            schema:
              title: UserRegisterReadV1
              description: 'Request schema for registering a new user V1'
              properties:
                firstname:
                  title: Firstname
                  type: string
                  maxLength: 255
                  minLength: 3
                  nullable: false
                lastname:
                  title: Lastname
                  type: string
                  maxLength: 255
                  minLength: 3
                  nullable: false
                email:
                  title: Email
                  type: string
                  maxLength: 255
                  minLength: 3
                  nullable: false
                password:
                  title: Password
                  type: string
                  maxLength: 255
                  minLength: 8
                  nullable: false
                password_confirmation:
                  title: 'Password Confirmation'
                  type: string
                  maxLength: 255
                  minLength: 8
                  nullable: false
              type: object
      responses:
        '201':
          description: 'Successfully registered a new user.'
          content:
            application/json:
              schema:
                title: UserRegisterWriteV1
                description: 'Response schema for successfully registering a new user V1.'
                properties:
                  message: { title: Message, type: string }
                  user: { $ref: '#/components/schemas/UserDataV1' }
                type: object
        '422':
          description: 'Failed validation.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationExceptionV1'
      security: []
  /v1/auth/login:
    post:
      tags:
        - Authentication
      summary: 'A request to login a user.'
      description: 'Request for logging existing users in. Returns a status code of 200 if the user was able to successfully login in attached with an authentication token.'
      operationId: d4c4c6392927052c421daac9d0a1c2fc
      requestBody:
        content:
          application/json:
            schema:
              title: UserLoginReadV1
              description: 'Request schema for logging in an existing user V1'
              properties:
                email:
                  title: Email
                  type: string
                  nullable: false
                password:
                  title: Password
                  type: string
                  nullable: false
              type: object
      responses:
        '201':
          description: 'Successfully logged in an existing user.'
          content:
            application/json:
              schema:
                title: UserLoginWriteV1
                description: 'Response schema for successfully logging in an existing user V1.'
                properties:
                  message: { title: Message, type: string }
                  user: { $ref: '#/components/schemas/UserDataV1' }
                type: object
        '422':
          description: 'Failed validation.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationExceptionV1'
      security: []
components:
  schemas:
    ValidationExceptionV1:
      title: ValidationExceptionV1
      description: 'Response schema for a generic validation error V1.'
      properties:
        code:
          title: 'Error code'
          type: string
        message:
          title: Message
          type: string
      type: object
    UserDataV1:
      title: UserDataV1
      description: 'A schema containing all the user data, that should be sent as a response.'
      properties:
        token:
          title: Token
          type: string
        firstname:
          title: Firstname
          type: string
        lastname:
          title: Lastname
          type: string
        email:
          title: Email
          type: string
      type: object
  securitySchemes:
    BasicAuth:
      type: http
      name: BasicAuth
      scheme: Basic
